<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2024 Weimeng Liu
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.escanor</groupId>
        <artifactId>escanor-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>com.wmliu.job</groupId>
    <artifactId>escanor-job</artifactId>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-discovery</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>tech.powerjob</groupId>
            <artifactId>powerjob-worker-spring-boot-starter</artifactId>
            <version>${latest.powerjob.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
    </dependencies>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <build>
        <plugins>
            <!--<plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>

                <configuration>
                    <image>
                        &lt;!&ndash;配置镜像名称&ndash;&gt;
                        <name>wmliu.server-a.com:9443/escanor/${project.name}:${project.version}</name>
                        &lt;!&ndash;镜像打包完成后自动推送到镜像仓库&ndash;&gt;
                        <publish>true</publish>
                        <tags>wmliu.server-a.com:9443/escanor/${project.name}:latest
                        </tags>
                    </image>
                    <docker>
                        &lt;!&ndash;Docker远程管理地址&ndash;&gt;
                        <host>tcp://192.168.50.126:2375</host>
                        &lt;!&ndash;不使用TLS访问&ndash;&gt;
                        <tlsVerify>false</tlsVerify>
                        &lt;!&ndash;Docker推送镜像仓库配置&ndash;&gt;
                        <publishRegistry>
                            &lt;!&ndash;推送镜像仓库用户名&ndash;&gt;
                            <username>wmliu</username>
                            &lt;!&ndash;推送镜像仓库密码&ndash;&gt;
                            <password>WAYNEislwm@16</password>
                            &lt;!&ndash;推送镜像仓库地址&ndash;&gt;
                            <url>https://wmliu.server-a.com:9443</url>
                        </publishRegistry>
                    </docker>
                </configuration>
            </plugin>-->
            <!--docker的操作-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.13</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <repository>${dockerfile.repository}/${docker.image.prefix}/${project.name}</repository>
                    <tag>${project.version}</tag>
                    <tag>latest</tag>
                    <username>wmliu</username>
                    <password>WAYNEislwm@16</password>
                    <buildArgs>
                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                        <IMAGE_HOST>${docker.registry.url}</IMAGE_HOST>
                    </buildArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>timestamp-property</id>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <configuration>
                            <name>build.time</name>
                            <pattern>yyyy-MM-dd.HHmmss</pattern>
                            <locale>en_US</locale>
                            <timeZone>GMT+8</timeZone>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--docker需要的jar的复制操作-->
            <!--<plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <copy todir = "src/main/docker"
                                      file = "target/${project.artifactId}-${project.version}.${project.packaging}"></copy>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>-->
        </plugins>


    </build>
</project>